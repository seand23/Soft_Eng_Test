     function addUser($firstname, $lastname, $username, $email, $password, $address, $phone)
        {
            $pdo = get_connection();
   
--1--        if (!$this -> isValidPassword($password)) {
--2--            return "Password must be at least 8 characters long and contain at least one special character."; // Password does not meet requirements
            }

            // Check if the phone number matches the XXX-XXX-XXXX format
--3--        if (!$this->isValidNumber($phone)) {
--4--            return "Phone number must be in XXX-XXX-XXXX format";
            }

            // Remove hyphens from the phone number and count digits
--5--        $Digits = preg_replace('/[^0-9]/', '', $phone);

            // Check if the phone number meets the length requirement
--6--        if (strlen($Digits) !== 10) {
--7--            return false; // Invalid phone number length
             }

--8--        $encryptPass =  password_hash($password, PASSWORD_DEFAULT); //Reintech.io //PASSWORD_DEFAULT uses bcrypt
    
            //insert user into database
--9--        $query = "INSERT INTO users (firstname, lastname, username, email, password, address, phone) VALUES (:firstname, :lastname, :username, :email, :password, :address, :phone)";
--10--       $stmt = $pdo->prepare($query);
--11--       $stmt->bindParam(':firstname', $firstname);
--12--       $stmt->bindParam(':lastname', $lastname);
--13--       $stmt->bindParam(':username', $username);
--14--       $stmt->bindParam(':email', $email);
--15--       $stmt->bindParam(':password', $encryptPass);
--16--       $stmt->bindParam(':address', $address);
--17--       $stmt->bindParam(':phone', $phone);
    
--18--        if ($stmt->execute()) {
--19--            return true; //user added successfully
--20--        } else {
--21--            return false; //errror adding user
             }
        }